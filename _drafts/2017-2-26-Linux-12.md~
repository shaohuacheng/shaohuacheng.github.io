---
layout: post
title: "Linux学习笔记(12)-正则表达式(1)"
date: 2017-2-26 
description: "Linux学习笔记(12)-正则表达式(1)"
tag: Linux
---   

## 前言

正则表达式是一种处理字符串的方法，它以行为单位来进行字符串的处理行为。
正则表达式通过一些特殊符号的辅助，可以让用户轻易达到查找、删除、替换某特定字符串的处理程序。

正则表达式是一种“表示方法”，只要工具程序支持这种表示法，那么该工具程序就可以作为正则表达式的字符串处理只用，例如vi, grep, awk, sed等工具。
因为他们支持正则表达式，所以这些工具就可以使用正则表达式的特殊字符来进行字符串的处理。

本文使用grep作为例子。

* [1.××命令](#1)

* [2.××命令](#2)

* [3.××命令](#3)

* [4.××命令](#4)

* [5.××命令](#5)


****


<h2 id="1">1.特殊符号 </h2>

[:alnum:] 代表英文大小写字符及数字，即0-9, A-Z, a-z

[:alpha:] 代表任何英文大小写字符，即A-Z, a-z

[:blank:] 代表空格键和[tab]键

[:cntrl:] 代表控制键，包括CR, LF, Tab, Del等

[:digit:] 代表数字，即0-9

[:graph:] 除了空格符(空格和[tab])外的其他所有按键

[:lower:] 代表小写字符，即a-z

[:print:] 代表任何可以被打印出来的字符

[:punct:] 代表标点符号(punctuation symbol)，即" ' ? ! ; : # $

[:upper:] 代表大写字符，即A-Z

[:space:] 代表任何产生空白的字符，包括空格 [tab] CR等

[:xdigit:] 代表十六进制的数字类型，包括0-9, A-F, a-f


<h2 id="2">2.基础正则表达式字符 </h2>

^word 以word开头

word$ 以word结尾

. 代表一个任一字符

\ 转义字符，将特殊符号的特殊意义取出

* 重复前一个字符零个到无穷多个

[list] 字符集合中的任一字符

[n1-n2] n1到n2范围中的任一字符

[^list] 不在字符集合中的任一字符

\{n,m\} 将前一个字符重复n到m个



<h2 id="3">3.grep高级用法 </h2>

    grep [-A][-B] [--color=auto] '搜寻字符串' filename

功能: 在filename文件中搜寻字符串

  -A： 后面加数字，为after的意思，除了列出该行外，后续的n行也列出来;

  -B: 后面加数字，为before的意思, 除了列出该行外，前面的n行也列出来;

  --color=auto: 将正确的那个选取数据列出颜色

例1: 用dmeg列出内核信息，再以grep找出内含eth的那行。找到的关键字显色，且加上行号来表示

    [root@localhost ~]# dmeg | grep -n --color=auto 'eth'

例2: 用dmeg列出内核信息，再以grep找出内含eth的那行。将关键字所在行的前两行与后三行也一起找出来显示

    [root@localhost ~]# dmeg | grep -A3 -B2 'eth'


例3: 在file中查找字符串'the'，如果没有该字符串则显示

    [root@localhost ~]# grep -v 'the' file


例4：查找包含test或tast这两个之一的行

    [root@localhost ~]# grep -n 't[ae]st' file

例5: 查找包含'oo'的行，但oo前不能是字母g

    [root@localhost ~]# grep -v '[^g]oo' file

例6: 查找包含'oo'的行，但oo前不能是任何小写字母

    [root@localhost ~]# grep -v '[^a-z]oo' file
    [root@localhost ~]# grep -v '[^[:lower:]]oo' file

例7: 查找包含the的行，但the必须出现在行首

    [root@localhost ~]# grep -v '^the' file

例8: 查找开头不是英文字符的行

    [root@localhost ~]# grep -v '^[^a-zA-Z]' file 

例9: 查找行尾为x的行

    [root@localhost ~]# grep -v 'x$' file 


例10: 查找空白行

    [root@localhost ~]# grep -v '^$' file 

例11: 查找包含g??d的行

    [root@localhost ~]# grep -v 'g..d' file 

例12: 查找包含g???d的行，其中g和d之间都是字符o，且o出现至少1次

    [root@localhost ~]# grep -v 'goo*d' file 

例13: 查找包含g??d的行，其中g和d之间是任意多个任意字符

    [root@localhost ~]# grep -v 'g.*d' file 

例14: 查找包含g??d的行，其中g和d之间是2到5个字符o

    [root@localhost ~]# grep -v 'go\{2,5\}d' file 


**1.命令格式**

    ×× [参数] [目录名]

**2.命令功能**

列出。

**3.常用参数**



**4.常用范例**

**例1:** 列出主文件夹下的所有文件

```
$requieres_audfa;
```


    [root@localhost ~]# ×× -al ~
    #-××

```python
@requires_authorization
class SomeClass:
    pass

if __name__ == '__main__':
    # A comment
    print 'hello world'
```




{% highlight ruby %}
def show
  @widget = Widget(params[:id])
  respond_to do |format|
    format.html # show.html.erb
    format.json { render json: @widget }
  end
end
{% endhighlight %}

***

