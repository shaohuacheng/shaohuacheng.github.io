---
layout: post
title: "Linux 学习笔记(7)-常用Linux命令：文件查询"
date: 2016-12-29 
description: "Linux学习笔记(7)-常用Linux命令：文件查询，介绍几个查询文件位置的命令，如which、whereis、locate、find等"
tag: Linux 
---   

## 前言

我们经常在linux要查找某个文件，但不知道放在哪里了，可以使用下面的一些命令来搜索：

* [1.which命令](#1): 查看可执行文件的位置

* [2.whereis命令](#2): 查看文件的位置

* [3.locate命令](#3): 配合数据库查看文件位置

* [4.find命令](#4): 实际搜寻硬盘查询文件名称



****

<h2 id="1">1.which命令 </h2>


which命令的作用是，在系统的PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。

也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。

**命令格式** 

    which 命令名称

或

    which -a 命令名称

使用-a参数时，将列出所有PATH目录中可以找到的命令，而不只是返回第一个。


**使用范例:** 

**例1:** 查找并显示pwd、ls等命令的路径

    [root@localhost ~]# which pwd
    /bin/pwd
    [root@localhost ~]#  which ls
    /bin/ls

**说明:**
which 是根据使用者所配置的 PATH 变量内的目录去搜寻可运行档的！所以，不同的 PATH 配置内容所找到的命令当然不一样的！

**例2:**  用 which 去找出 which

    [root@localhost ~]# which which
    alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot 	--show-tilde'
         /usr/bin/which

**说明**
竟然会有两个 which ，其中一个是 alias。那就是所谓的“命令别名”，意思是输入which会等于后面接的那串命令。

**例3:** 找出 cd 这个命令的完整文件名

    [root@localhost ~]# which cd

cd这个命令竟然找不到！怎么可能！我明明可以执行cd的!

这是因为，which命令事实上是根据PATH这个变量所规范的路径去寻找“执行文件”的文件名。所以，它重点是找出执行文件！且which后面接的是完整文件名。
cd找不到，是因为cd是bash内置的命令，所以找不到所谓的"执行文件"！

****



<h2 id="2">2.whereis命令 </h2>

whereis命令*只能用于程序名的搜索*，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。

**命令格式：**

whereis [参数] 文件名

**命令功能**

whereis命令是定位可执行文件、源代码文件、帮助文件在文件系统中的位置。
这些文件的属性应属于原始代码，二进制文件，或是帮助文件。


**常用参数**

-b   只找二进制格式的文件

-m   只找在说明文件帮助文件路径下的文件

-s   只找源代码文件

-u   除上述三个选项外的其他特殊文件。 

**常用实例**

**例1:** 将和passwd有关的文件都查找出来

    [root@localhost ~]# whereis passwd

**例2:** 查找与svn相关的二进制文件

    [root@localhost ~]# whereis -b svn


**注意:**

和下面介绍的find相比，whereis查找的速度非常快，这是因为linux系统会将系统内的所有文件都记录在一个数据库文件中，当使用whereis和下面介绍的locate时，都会以此数据文件的内容为准，而find是通过遍历硬盘来查找，whereis和locate的效率自然比find要快。 
但是该数据库文件并不是实时更新，默认情况下时每天更新一次(每个distribution都不同)，因此，我们在用whereis和locate查找文件时，有时会找到已经被删除的数据，或者刚刚建立文件，却无法查找到，原因就是因为数据库文件没有被更新。 



<h2 id="3">3.locate命令 </h2>


locate让使用者可以很快速的搜寻系统内是否有指定的文件。


locate的使用方式很简单，只需要：

    locate [参数] [关键词]

其中常用的参数有两个：

-i: 忽略大小写

-r: 使用正则表达式为查找条件

**注意** 

1.使用locate进行查找时，只要文件的完整文件名(包含路径名)中，只要包括了指定关键词，就会被显示出来。这个是很好用的命令，特别是忘记某个文件的完整名字时。

2.和whereis一样，locate并不直接在系统里查找，而是在数据库中查找。locate寻找的数据是已创建的数据/var/lib/mlocate/里面的数据所查到的。由于没有访问硬盘，所以速度很快；但由于数据库更新不及时，有可能查到了已删除的文件，或发现刚创建的文件查找不到。手动更新数据库可输入updatedb命令。


**常用实例:**

    [root@localhost ~]# locate pwd
    #查找和pwd相关的所有文件

    [root@localhost ~]# locate /etc/sh
    # 搜索etc目录下所有以sh开头的文件

    
<h2 id="4">4.find命令 </h2>

相对于whereis、locate等命令，find的命令所包含的功能更为强大，它的搜索对象是所有满足条件的文件，并且能够对查找的结果执行相应的命令。但是由于要从硬盘中查询，因此查找速度偏慢。


**使用方式**

一般的find命令的使用方式如下：

    find [路径][参数][动作]

**常用参数**

1.与时间有关的参数，共有-atime，-ctime和-mtime，下面以-mtime为例：

  -mtime n: n为数字，意义为n天之前的“一天之内”被更改过的文件

  -mtime +n: 列出在n天之前(不包含第n天本身)被更改过的文件名

  -mtime -n: 列出在n天之内(包含第n天本身)被更改过的文件

2.与用户或用户组名有关的参数

  -uid n: 文件的用户账号ID(即UID)为n的文件

  -gid n: 文件的用户组名ID(即GID)为n的文件

  -user name: 用户账号名称为name的文件

  -group name: 用户组名为name的文件

  -nouser: 文件的所有者不存在于/etc/passwd的文件

  -nogroup: 文件的所有用户组不存在与/etc/group中的文件

3.与文件权限及名称有关的参数

  -name filename: 文件名为filename的文件

  -size [+-]SIZE: 查找比SIZE大(+)或小(-)的文件，这个SIZE的规格有：
   c: 代表byte, k:代表1024bytes。如查找大于50k的文件就是"-size +50k"

  -type TYPE: 查找文件的类型为TYPE的，类型有:一般正规文件(f)、设备文件(b,c)、目录(d)、连接文件(l)等属性

  -perm mode: 查找文件权限刚好等于mode的文件，这个mode为[chmod命令](http://kousw.com/2016/12/Linux-6/#3)中讲述的文件权限值

  -perm -mode: 查找文件至少包含了mode中所包含的所有属性的文件

  -perm +mode: 查找文件包含了任一mode中包含的权限的文件

**关于动作**

我们知道find的命令格式为：

    find [路径][参数][动作]

路径是我们要查找的范围，参数上面已做介绍，那么动作是什么呢？

动作的参数如下

  -exec command: command 为其他命令，-exec后面接其他命令来处理查找到的结果

一个例子：

    find / -perm +7000 -exec ls -l {}\;

在上述命令中，find / -perm +7000是一般的find命令的使用方法，代表从/目录寻找权限满足要求的一些文件。

当后面接-exec时：

{}代表由find找到的内容

-exec一直到"\;"是关键字，代表find额外命令的开始(-exec)到结束(\;)，在这中间的就是find命令内的额外命令，在本例中即 ls -l {}

**常用范例**

查找文件名包含abc的文件

    find /home/test/ -name "\*abc*"

查找最近24小时有改动的文件

    find /home/test/ -mtime 0

查找比file1文件更新的文件

    find /home/test/ -newer file1

查找/home/test目录中大于50k的文件，并将它们移动到dir1子目录中

    fine /home/test/ -size +50k -exec mv {} /home/test/dir1/ \;

**注意** 

1.使用locate进行查找时，只要文件的完整文件名(包含路径名)中，只要包括了指定关键词，就会被显示出来。这个是很好用的命令，特别是忘记某个文件的完整名字时。

2.和whereis一样，locate并不直接在系统里查找，而是在数据库中查找。locate寻找的数据是已创建的数据/var/lib/mlocate/里面的数据所查到的。由于没有访问硬盘，所以速度很快；但由于数据库更新不及时，有可能查到了已删除的文件，或发现刚创建的文件查找不到。手动更新数据库可输入updatedb命令。


**常用实例:**

    
    #查找和pwd相关的所有文件

    [root@localhost ~]# locate /etc/sh
    # 搜索etc目录下所有以sh开头的文件


关于find命令使用十分灵活，文章[linux之find命令详解](http://www.cnblogs.com/bigbean/p/3669739.html)给出了更多的使用实例。
