---
layout: post
title: "Linux 学习笔记-常用Linux命令(3)：文件基本管理"
date: 2016-12-25 
description: "Linux学习笔记-常用Linux命令(3)：文件基本管理，包括ls、cp、rm、mv、basename和dirname等"
tag: 博客 
---   

## 前言
本文介绍Linux中几个常见的处理目录的命令：

* [1.ls命令](#1)

* [2.cp命令](#2)

* [3.rm命令](#3)

* [4.mv命令](#4)

* [5.basename和dirname命令](#5)


****


<h2 id="1">1.ls命令 </h2>

ls即list，用来查看文件。

**1.命令格式**

    ls [选项] [目录名]

**2.命令功能**

列出目标目录中所有的子目录和文件

**3.常用**

-a,--all 列出目录下所有的文件，包括以.开头的隐含文件(常用)
-A 列出除"."(当前目录)和".."(父目录)外的所有文件
-c 配合-lt时：根据ctime排序，且显示ctime(ctime:文件状态最后更改的时间)
   配合-l时：根据文件或目录名称排序，且显示ctime
   其他：根据ctime排序
-d 仅列出目录本身，而不是列出目录内的文件数据(常用)
-f 直接列出结果，不进行排序
-g 类似-l，但不列出所有者
-G 不列出任何有关组的信息
-h, --human-readable 以容易理解的方式列出文件大小(如1K 234M 2G等)
-si 类似-h，但文件大小取1000进制而不是2014
-i 列出inode号码
-l 列出长数据串，包含文件的属性和权限等数据(常用)
-r 将排序结果反向输出
-R 连同子目录一起列出来，相当于该目录下的所有文件都会显示出来
-S 以文件容量大小排序
-t 以时间排序


**4.常用范例**
例1：列出主文件夹下的所有文件

    [root@localhost ~]# ls -al ~
    #-al等同于-a -l，~表示操作的目录为主文件夹

例2：列出当前目录下后缀名为.jpg的文件

    [root@localhost ～]# ls -l *.jpg

例3：列出当前目录下所有s开头的文件，按时间逆序显示

    [root@localhost ~]# ls -ltr s*


例4：计算当前目录下的文件数和目录数

    [root@localhost ~]# ls -l * | grep "^-" | wc -l
    #grep "^-"筛选出所有以"-"开头的记录(即文件)，wc用于统计行数(详见grep和wc)

    [root@localhost test]# ls -l * | grep "^d" | wc -l
    #grep "^-"筛选出所有以"^"开头的记录(即目录)，wc用于统计行数(详见grep和wc)


****

<h2 id="2"> 2.cp命令</h2>


cp即copy，在linux系统中用于拷贝文件。

**1.命令格式**

    cp [选项] 源文件 目标文件
    cp [选项] 源文件1 源文件2 源文件3 ... 目标目录

**2.命令功能**

将源文件复制一份为目标文件

将多个源文件复制一份至目标目录。

**3.常用参数**

-a 等于-pdr，即同时使用-p -d -r三个参数

-b 类似--backup 但不接受参数，在递归处理时复制特殊文件内容

-d 若源文件是连接文件的属性，则复制连接文件属性而非文件本身。等于--no-dereference --preserve=links

-f 即force的意思， 如果目标文件已经存在且无法打开，则将目标文件删除再尝试

-i 若目标文件已经存在，在覆盖前询问

-H 跟随源文件中的命令行符号链接

-l 创建硬连接，而非复制复制文件本身

-L，--dereference 总是跟随符号链接

-n，--no-clobber 不要覆盖已存在的文件(使前面的 -i 选项失效)

-P，--no-dereference 不跟随源文件中的符号链接

-p  连同文件的属性一起复制过去，而非使用默认属性(备份常用)

-R, -r, --recursive 递归复制，如果目录内有其他文件或目录，则一起复制

-s 复制成为符号连接文件(symbolic link)，即“快捷方式”文件

**注意：** 如果源文件有多个，则目标必须是目录

**4.常用范例**

**例1:** 将当前目录下的test1文件复制到dir/子目录下，并更名为test2

    [root@localhost ~]# cp test1 dir/test2
    [root@localhost ~]# cp -i test1 dir/test2
    cp: overwrite 'dir/test2'? 
    #重复两次操作，第二次加上-i参数后，在覆盖前会询问用户，输入n或y进行确认

**注意:** 在没有带-a或-p参数时，目标文件的时间是默认的。在带了-a或-p参数时，目标文件的时间和源文件一致。

**例2:** 将当前目录下的test1文件复制到dir/子目录下，并保留文件名

    [root@localhost ~]# cp test1 dir/

**例3:** 将dir1/中的所有文件(包括目录)复制到dir2/中

    [root@localhost ~]# cp -a dir1/* dir2/ 
    #如果没有-a参数，则只复制普通文件，不复制dir1/中的子目录
    [root@localhost ~]# cp -a dir1 dir2 
    #如果dir2不存在，则自动创建dir2并将dir1中的文件复制到dir2中。如果dir2存在，则dir1目录本身将全部复制到dir2里面。

**例4:** 复制一个test1文件的符号连接文件

    [root@localhost ~]# cp -s test1 test1.link
    [root@localhost ~]# ll
    lrwxrwxrwx 1 root root     5 12-25 22:12 test1.link -> test1
    -rwxrwxr-x 1 root root 18337 12-13 11:52 test1
    #可以看到test1.link是个“快捷方式”，右边指示的是它“连接”到哪里去
    


****

<h2 id="3">3.rm命令 </h2>


**1.命令格式**

    rm [参数] 文件或目录

**2.命令功能**

rm命令用于移除文件或者目录。

**3.常用参数**

-f: 就是force，忽略不存在的文件，不提示警告信息。

-i: 互动模式，删除前会询问用户是否操作

-r: 递归删除，经常用在目录的删除。(非常危险!)

**4.常用范例**

    [root@localhost ~]# rm -i test
    rm: remove regular file 'test'? 
    #删除test文件，由于加入-i参数，删除前会进行询问
    
    [root@localhost ~]# rm -i *.jpg
    #删除所有以.jpg结尾的文件
    
    [root@localhost ~]# rm -r dir1
    #删除目录dir1及里面的所有文件

**注意:** 1.rmdir删除时要求目录为空，但rm -r命令可以直接删掉目录及里面的所有文件。

2.rm命令不加-r参数时，只能删除文件，无法直接删除一个目录。
    

****

<h2 id="4"> 4.mv命令</h2>

**1.命令格式**

    mv [参数] 源文件或目录 目标文件或目录

**2.命令功能**

移动文件指定名字的目录，或对文件进行重命名。

**3.常用参数**

-f: 就是force，如果目标文件已经存在，不询问直接覆盖

-i: 互动模式，目标文件如果存在会询问用户是否覆盖

-u: 若目标文件已存在且源文件比较新，才进行操作(update)。


**4.常用范例**

**例1:** ，

    [root@localhost ~]# cp test1 test2
    # 复制test1为test2
    
    [root@localhost ~]# mkdir dir1
    # 创建一个目录dir1
    
    [root@localhost ~]# mv test2 dir1
    # 将test2移动进dir1
    
    [root@localhost ~]# mv test1 test3
    # 将test1重命名为test3
    
    [root@localhost ~]# cp test3 test1
    # 复制test3为test1
    
    [root@localhost ~]# mv test1 test3 dir1
    # 将test1和test3一起移动到dir1中
 
****

<h2 id="4"> 5.basename和dirname</h2>

**1.命令格式**

    basename 完整文件名(包含目录与文件名)
    dirname 完整文件名(包含目录与文件名)

**2.命令功能**

获取文件名或目录名称

**3.常用范例**

    [root@localhost ~]# basename /etc/sysconfig/network
    network
    # 获取的文件名为network
    
    [root@localhost ~]# dirname /etc/sysconfig/network
    /etc/sysconfig
    # 获取的目录名为/etc/sysconfig

**注意:** 并不要求文件一定存在

****



转载请注明原地址，本文地址：[http://kousw.com/2016/12/Linux-3](http://kousw.com/2016/12/Linux-3) 谢谢！
