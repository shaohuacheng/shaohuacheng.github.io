---
layout: post
title: "Linux 学习笔记(6)-常用Linux命令：文件权限和属性1"
date: 2016-12-29 
description: "Linux学习笔记(5)-常用Linux命令：文件权限和属性1，介绍几个权限和属性相关的命令，如chgrp、chown、chmod、touch等"
tag: Linux 
---   

## 前言

简单介绍chgrp、chown、chmod、touch这几个命令的用法，相关用户和用户组的基本概念在[上一篇](http://kousw.com/2016/12/Linux-5)"

* [1.chgrp命令](#1)

* [2.chown命令](#2)

* [3.chmod命令](#3)

* [4.touch命令](#4)





****


<h2 id="1">1.chgrp命令 </h2>


chgrp是change group的简称，即改变一个文件的用户组。

**注意：** 要改变的组名必须在/etc/group文件内存在才可以，否则会报错。

**使用范例:** 

    [root@localhost ~]# chgrp users testfile

功能: 将testfile文件的所属用户组改为users。

    [root@localhost ~]# chgrp -R users testdir

功能: 将testdir目录，连同子目录下的所有文件和目录，所属用户组改为users。


****



<h2 id="2">2.chown命令 </h2>


chown即change owner，用于改变一个文件的所有者。

和chgrp类似的，要改变的新所有者必须是系统中已经存在的用户，即在/etc/passwd这个文件中有记录的用户名才可以。

chown不仅可以改变所有者，还可以顺带修改用户组的名称。

**命令格式**

命令使用方式是：

    chown [-R] 用户名 文件或目录

或者

    chown [-R] 用户名:组名 文件或目录

-R参数表示连同目录下的所有子目录和文件一同修改。

**使用范例**

    [root@localhost ~]# chgrp bin testfile

功能: 将testfile文件的所有者改为bin。

    [root@localhost ~]# chgrp root:root testfile

功能: 将testfile文件的所有者和用户均改为root。

**注意:** chown中的冒号:也可以用点.来代替



****



<h2 id="3">3.chmod命令 </h2>


chmod命令用于修改文件的权限，十分常用。关于Linux中的基本权限的一些内容，可以参见[上一篇](http://kousw.com/2016/12/Linux-5)。

**1.命令格式**

chmod命令可以通过数字和符号两种方式来改变文件权限。

**数字方式**

    chmod [-R] xyz 文件或目录

其中，xyz表示在[上一篇](http://kousw.com/2016/12/Linux-5)中介绍的权限数字，具体如下:

Linux用9个字符，以3个为一组，共3组表示一个文件的权限。这3组分别对应的是“文件所有者的权限(owner)”、“同用户组的权限(group)”和“其他非本用户组用户的权限(others)”。
每组的三个字符是rwx的这三个参数的组合，其中[r]代表可读(read)、[w]代表可写(write)、[x]代表可执行(execute)。如果没有对应的权限，则该位置用-代替。


每组的三个字符分别对应0~7的一个数字，r、w、x分别对应数字4、2、1，如果有对应权限，则将对应数字累加。

例如：当权限为-rwxr-x---时，数字为：

    owner = rwx = 4+2+1 = 7
    group = r-x = 4+0+1 = 5
    others = --- = 0+0+0 = 0

因此，该文件的权限数字为750

则可以通过

    chmod 750 testfile

为testfile设置权限为-rwxr-x---.

**符号方式**


由于文件的权限基本上只有9个，分别是user、group、others这3种身份，那么我们就可以通过u,g,o来代表3种身份的权限。此外用a代表all即全部身份。读写的权限就可以写成r,w,x。
那么一个简单的修改权限的例子如：

    [root@localhost ~]# chmod u=rwx,go=rx testfile

即：将文件testfile的user权限改为rwx,group和others权限改为r-x。其中go代表group和others，u=rwx和go=rx之间只有一个“,”没有空格。

同时，还可以将"="改为"+"或"-"，表示增加权限或去掉权限。如：

    [root@localhost ~]# chmod a-x,g+w testfile

即：为所有身份去掉执行权限(x)，为group身份增加写权限(w)

**注意:** 在+与-的状态下,只要是没指定到的选项，则该选项不会被变动。


****


<h2 id="4">4.touch命令 </h2>

对于一个文件而言，“权限”只是属性之一，文件的另一个属性是“时间”。
文件的时间属性主要有：

**modification time (mtime)**

修改时间。当文件的内容被更改时，就会更新这个时间。此处的“内容”是指文件数据，非属性或权限。


**status time (ctime)**

状态时间。当权限和属性等状态数据被更改时，就会更新这个时间。


**access time (atime)**

访问时间，即该文件的内容被取用的时间更改时，就会更新这个时间。

在前面介绍的ls -l命令显示的时间，默认情况是该文件的mtime。 查看文件的状态时间或访问时间，可利用下面两个命令：

    ls -l --time=atime testfile
    ls -l --time=ctime testfile

在linux中，可以通过touch命令修改文件的时间。

**命令用法**

touch命令的用法是：

    touch [参数] 文件

注意：

1.touch命令默认情况下是将文件时间修改为现在的时间。

2.使用touch命令，若指定的文件名不存在，则自动创建一个新文件。因此touch命令也经常用来创建文件使用。

**常用参数**

-a: 仅修改访问时间

-c: 仅修改时间，若文件不存在不创建新文件

-d: 后面可以接日期，指定touch命令将文件日期修改为该日期，也可以使用--date="日期或时间"

-m: 仅修改mtime

-t: 后面可以接时间，指定touch命令将文件时间修改为改时间，格式为[YYMMDDhhmm]。

**常用范例**

    [root@localhost ~]# touch -a testfile
    #将文件的访问时间修改为当前时间
    [root@localhost ~]# touch --date="1 day ago" testfile
    #将文件的所有时间均修改为1天前
    [root@localhost ~]# touch -m -t 1708091121 testfile
    #将文件的修改时间(mtime)修改为17年8月9日11:21

此外，也可以用touch命令创建新文件

    [root@localhost ~]# touch newfile
    #以当前时间为属性，创建一个新文件newfile(要求newfile原本不存在)





